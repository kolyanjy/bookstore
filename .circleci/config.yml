version: 2.1

orbs:
  heroku: circleci/heroku@0.0.8

caches: 
  - &bundle_cache v1-repo-{{ checksum "Gemfile.lock"  }}

executors:
  default:
    working_directory: ~/repo
    description: The official CircleCI Ruby Docker image
    docker:
      - image: circleci/ruby:2.6.1-node-browsers
        environment:
          RAILS_ENV: test
      - image: circleci/postgres:11.3-alpine
        environment:
          POSTGRES_USER: rails_dev
          POSTGRES_PASSWORD: 'aqwe123'
          POSTGRES_DB: bookstore_test
          DATABASE_URL: "postgres://ubuntu@localhost:5432/bookstore_test"

commands:
  run_linters:
    steps:
      - run: bundle exec rubocop
      - run: bundle exec brakeman -q
      - run: bundle exec lol_dba db:find_indexes
      - run: bundle exec rails_best_practices .
      - run: mkdir coverage_results
      - persist_to_workspace:
          root: .
          paths:
            - coverage_results

  run_specs:
    steps:
      - save_cache:
          key: v2-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/repo
      - run: 
          name: run specs
          environment:
            - RAILS_ENV: test
            - RACK_ENV: test
          command: |
            mkdir -p /tmp/rspec
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out /tmp/rspec/rspec.xml \
                              --format progress \
                              --profile \
                              --fail-fast \
                              -- \
                              $TEST_FILES
      - store_test_results:
          path: /tmp/rspec
      - attach_workspace:
          at: .      
      - run:
          name: Stash Coverage Results
          command: |
            cp -R coverage/.resultset.json coverage_results/.resultset-${CIRCLE_NODE_INDEX}.json
      - persist_to_workspace:
          root: .
          paths:
            - coverage_results

  merge_and_check_coverage:
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          key: v2-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Merge and check coverage
          command: |
            RUN_COVERAGE=true bundle exec rake simplecov:report_coverage
      - store_artifacts:
          path: ~/repo/coverage
          destination: coverage

  defaults:
    steps:
      - checkout
      - restore_cache:
          key: *bundle_cache
      - run: bundle install --path vendor/bundle
      - save_cache:
          key: *bundle_cache
          paths:
            - ~/repo/vendor/bundle
      - run:
          name: Set up DB
          command: |
            bundle exec rake db:create
            bundle exec rake db:migrate

jobs:
  lintering:
    executor: default
    steps:
      - defaults
      - run_linters
  run_specs:
    executor: default
    parallelism: 2
    steps:
      - defaults
      - run_specs

  check_coverage:
    executor: default
    steps:
      - defaults
      - merge_and_check_coverage

  deploy_prod_heroku:
    executor: heroku/default 

    steps:
      - checkout
      - heroku/install
      - heroku/deploy-via-git: 
          only-branch: master
          app-name: ${HEROKU_APP_NAME_PROD}
          api-key: ${HEROKU_API_KEY_PROD}

workflows:
  version: 2.1
  build:
    jobs:
      - lintering
      - run_specs:
          requires:
            - lintering
      - check_coverage:
          requires:
            - run_specs
      - deploy_prod_heroku:
          requires:
            - run_specs
